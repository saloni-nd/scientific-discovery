filter(Year %in% decades_to_keep) %>%
filter(Sex == 'Total')
mortality_d$Year <- as.factor(mortality_d$Year)
# Remove mortality rates of 0 as they can't be logged and are invalid
mortality_d <- mortality_d %>%
filter(Rate > 0)
# Define the line types manually
line_types <- c("1900-1909" = "dashed",
"1980-1989" = "solid")
ggplot(data=mortality_d, aes(linetype=Year, x=Age, y=Rate)) +
# Choose line or smoothed line or points
geom_line(size=1, alpha=1, color="blue") +
#geom_point(data=filter(mortality_d, Age==0), aes(x=Age, y=Rate), size=1, show.legend=FALSE) +
# Limit to 95 because ages above 100 are noisy and go above 100%
coord_cartesian(xlim=c(0,95)) +
theme_classic() +
theme(strip.background = element_blank(),
legend.position = "right") +
scale_x_continuous(breaks = seq(0, 100, by=10)) +
scale_y_continuous(labels = scales::percent, trans='log2', breaks = c(0.0001, 0.001, 0.01, 0.1, 1)) +
scale_linetype_manual(values = line_types) +
labs(title = "Death rate by age",
y = NULL,
x = "Age")
# Open libraries
library(tidyverse)
library(scales)
library(viridis)
library(RColorBrewer)
file_path <- "/Users/saloni/Documents/Github/private-work/wip/merch-chart/"
countries <- c("uk")
cohort_mortality <- list()
cohort_mortality <- read_table(paste0(file_path, "cMx_1x10_uk.txt"), skip=2, na=".")
# Gather to make it long format and get only values for total
cohort_mortality <- gather(cohort_mortality, "Sex", "Rate", Female:Total)
mortality <- cohort_mortality
# Reformat
mortality$Age <- as.integer(mortality$Age)
mortality$Rate <- as.numeric(mortality$Rate)
mortality$Sex <- as.factor(mortality$Sex)
# Select decades to show, retain only Total
# Define the decades you are interested in
decades_to_keep <- c("1900-1909", "2000-2009")
# Filter the data to include only rows with the specified decades
mortality_d <- mortality %>%
filter(Year %in% decades_to_keep) %>%
filter(Sex == 'Total')
mortality_d$Year <- as.factor(mortality_d$Year)
# Remove mortality rates of 0 as they can't be logged and are invalid
mortality_d <- mortality_d %>%
filter(Rate > 0)
# Define the line types manually
line_types <- c("1900-1909" = "dashed",
"1980-1989" = "solid")
ggplot(data=mortality_d, aes(linetype=Year, x=Age, y=Rate)) +
# Choose line or smoothed line or points
geom_line(size=1, alpha=1, color="blue") +
#geom_point(data=filter(mortality_d, Age==0), aes(x=Age, y=Rate), size=1, show.legend=FALSE) +
# Limit to 95 because ages above 100 are noisy and go above 100%
coord_cartesian(xlim=c(0,95)) +
theme_classic() +
theme(strip.background = element_blank(),
legend.position = "right") +
scale_x_continuous(breaks = seq(0, 100, by=10)) +
scale_y_continuous(labels = scales::percent, trans='log2', breaks = c(0.0001, 0.001, 0.01, 0.1, 1)) +
scale_linetype_manual(values = line_types) +
labs(title = "Death rate by age",
y = NULL,
x = "Age")
str(mortality)
# Open libraries
library(tidyverse)
library(scales)
library(viridis)
library(RColorBrewer)
file_path <- "/Users/saloni/Documents/Github/private-work/wip/merch-chart/"
countries <- c("uk")
period_mortality <- list()
period_mortality <- read_table(paste0(file_path, "Mx_1x10_uk.txt"), skip=2, na=".")
# Gather to make it long format and get only values for total
period_mortality <- gather(period_mortality, "Sex", "Rate", Female:Total)
mortality <- period_mortality
# Reformat
mortality$Age <- as.integer(mortality$Age)
mortality$Rate <- as.numeric(mortality$Rate)
mortality$Sex <- as.factor(mortality$Sex)
# Select decades to show, retain only Total
# Define the decades you are interested in
decades_to_keep <- c("1922-1929", "2000-2009")
# Filter the data to include only rows with the specified decades
mortality_d <- mortality %>%
filter(Year %in% decades_to_keep) %>%
filter(Sex == 'Total')
mortality_d$Year <- as.factor(mortality_d$Year)
# Remove mortality rates of 0 as they can't be logged and are invalid
mortality_d <- mortality_d %>%
filter(Rate > 0)
# Define the line types manually
line_types <- c("1922-1929" = "dashed",
"1980-1989" = "solid")
ggplot(data=mortality_d, aes(linetype=Year, x=Age, y=Rate)) +
# Choose line or smoothed line or points
geom_line(size=1, alpha=1, color="blue") +
#geom_point(data=filter(mortality_d, Age==0), aes(x=Age, y=Rate), size=1, show.legend=FALSE) +
# Limit to 95 because ages above 100 are noisy and go above 100%
coord_cartesian(xlim=c(0,95)) +
theme_classic() +
theme(strip.background = element_blank(),
legend.position = "right") +
scale_x_continuous(breaks = seq(0, 100, by=10)) +
scale_y_continuous(labels = scales::percent, trans='log2', breaks = c(0.0001, 0.001, 0.01, 0.1, 1)) +
scale_linetype_manual(values = line_types) +
labs(title = "Death rate by age",
y = NULL,
x = "Age")
# Open libraries
library(tidyverse)
library(scales)
library(viridis)
library(RColorBrewer)
file_path <- "/Users/saloni/Documents/Github/private-work/wip/merch-chart/"
countries <- c("uk")
period_mortality <- list()
period_mortality <- read_table(paste0(file_path, "Mx_1x10_uk.txt"), skip=2, na=".")
# Gather to make it long format and get only values for total
period_mortality <- gather(period_mortality, "Sex", "Rate", Female:Total)
mortality <- period_mortality
# Reformat
mortality$Age <- as.integer(mortality$Age)
mortality$Rate <- as.numeric(mortality$Rate)
mortality$Sex <- as.factor(mortality$Sex)
# Select decades to show, retain only Total
# Define the decades you are interested in
decades_to_keep <- c("1922-1929", "2010-2009")
# Filter the data to include only rows with the specified decades
mortality_d <- mortality %>%
filter(Year %in% decades_to_keep) %>%
filter(Sex == 'Total')
mortality_d$Year <- as.factor(mortality_d$Year)
# Remove mortality rates of 0 as they can't be logged and are invalid
mortality_d <- mortality_d %>%
filter(Rate > 0)
# Define the line types manually
line_types <- c("1922-1929" = "dashed",
"2010-2009" = "solid")
ggplot(data=mortality_d, aes(linetype=Year, x=Age, y=Rate)) +
# Choose line or smoothed line or points
geom_line(size=1, alpha=1, color="blue") +
#geom_point(data=filter(mortality_d, Age==0), aes(x=Age, y=Rate), size=1, show.legend=FALSE) +
# Limit to 95 because ages above 100 are noisy and go above 100%
coord_cartesian(xlim=c(0,95)) +
theme_classic() +
theme(strip.background = element_blank(),
legend.position = "right") +
scale_x_continuous(breaks = seq(0, 100, by=10)) +
scale_y_continuous(labels = scales::percent, trans='log2', breaks = c(0.0001, 0.001, 0.01, 0.1, 1)) +
scale_linetype_manual(values = line_types) +
labs(title = "Death rate by age",
y = NULL,
x = "Age")
str(mortality_d)
summary(mortality_d)
tail(mortality)
# Open libraries
library(tidyverse)
library(scales)
library(viridis)
library(RColorBrewer)
file_path <- "/Users/saloni/Documents/Github/private-work/wip/merch-chart/"
countries <- c("uk")
period_mortality <- list()
period_mortality <- read_table(paste0(file_path, "Mx_1x10_uk.txt"), skip=2, na=".")
# Gather to make it long format and get only values for total
period_mortality <- gather(period_mortality, "Sex", "Rate", Female:Total)
mortality <- period_mortality
# Reformat
mortality$Age <- as.integer(mortality$Age)
mortality$Rate <- as.numeric(mortality$Rate)
mortality$Sex <- as.factor(mortality$Sex)
# Select decades to show, retain only Total
# Define the decades you are interested in
decades_to_keep <- c("1922-1929", "2010-2019")
# Filter the data to include only rows with the specified decades
mortality_d <- mortality %>%
filter(Year %in% decades_to_keep) %>%
filter(Sex == 'Total')
mortality_d$Year <- as.factor(mortality_d$Year)
# Remove mortality rates of 0 as they can't be logged and are invalid
mortality_d <- mortality_d %>%
filter(Rate > 0)
# Define the line types manually
line_types <- c("1922-1929" = "dashed",
"2010-2019" = "solid")
ggplot(data=mortality_d, aes(linetype=Year, x=Age, y=Rate)) +
# Choose line or smoothed line or points
geom_line(size=1, alpha=1, color="blue") +
#geom_point(data=filter(mortality_d, Age==0), aes(x=Age, y=Rate), size=1, show.legend=FALSE) +
# Limit to 95 because ages above 100 are noisy and go above 100%
coord_cartesian(xlim=c(0,95)) +
theme_classic() +
theme(strip.background = element_blank(),
legend.position = "right") +
scale_x_continuous(breaks = seq(0, 100, by=10)) +
scale_y_continuous(labels = scales::percent, trans='log2', breaks = c(0.0001, 0.001, 0.01, 0.1, 1)) +
scale_linetype_manual(values = line_types) +
labs(title = "Death rate by age",
y = NULL,
x = "Age")
# Open libraries
library(tidyverse)
library(scales)
library(viridis)
library(RColorBrewer)
file_path <- "/Users/saloni/Documents/Github/private-work/wip/merch-chart/"
countries <- c("uk")
period_mortality <- list()
period_mortality <- read_table(paste0(file_path, "Mx_1x10_uk.txt"), skip=2, na=".")
# Gather to make it long format and get only values for total
period_mortality <- gather(period_mortality, "Sex", "Rate", Female:Total)
mortality <- period_mortality
# Reformat
mortality$Age <- as.integer(mortality$Age)
mortality$Rate <- as.numeric(mortality$Rate)
mortality$Sex <- as.factor(mortality$Sex)
# Select decades to show, retain only Total
# Define the decades you are interested in
decades_to_keep <- c("1922-1929", "2010-2019")
# Filter the data to include only rows with the specified decades
mortality_d <- mortality %>%
filter(Year %in% decades_to_keep) %>%
filter(Sex == 'Total')
mortality_d$Year <- as.factor(mortality_d$Year)
# Remove mortality rates of 0 as they can't be logged and are invalid
mortality_d <- mortality_d %>%
filter(Rate > 0)
# Define the line types manually
line_types <- c("1922-1929" = "dashed",
"2010-2019" = "solid")
ggplot(data=mortality_d, aes(linetype=Year, x=Age, y=Rate)) +
# Choose line or smoothed line or points
geom_line(size=1, alpha=1, color="blue") +
# Limit to 95 because ages above 100 are noisy and go above 100%
coord_cartesian(xlim=c(0,95)) +
theme_classic() +
theme(
strip.background = element_blank(),
legend.position = "right",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.line.x = element_blank(),
axis.line.y = element_blank()
) +
scale_x_continuous(breaks = seq(0, 100, by=10)) +
scale_y_continuous(labels = scales::percent, trans='log2', breaks = c(0.0001, 0.001, 0.01, 0.1, 1)) +
scale_linetype_manual(values = line_types) +
labs(title = NULL, y = NULL, x = NULL)
ggplot(data=mortality_d, aes(linetype=Year, x=Age, y=Rate)) +
# Choose line or smoothed line or points
geom_line(size=1, alpha=1, color="blue") +
# Limit to 95 because ages above 100 are noisy and go above 100%
coord_cartesian(xlim=c(0,95)) +
theme_classic() +
theme(
strip.background = element_blank(),
legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.line.x = element_blank(),
axis.line.y = element_blank()
) +
scale_x_continuous(breaks = seq(0, 100, by=10)) +
scale_y_continuous(labels = scales::percent, trans='log2', breaks = c(0.0001, 0.001, 0.01, 0.1, 1)) +
scale_linetype_manual(values = line_types) +
labs(title = NULL, y = NULL, x = NULL)
ggplot(data=mortality_d, aes(linetype=Year, x=Age, y=Rate)) +
# Choose line or smoothed line or points
geom_line(size=1, alpha=1, color="blue") +
# Limit to 95 because ages above 100 are noisy and go above 100%
coord_cartesian(xlim=c(0,95)) +
theme_classic() +
theme(
strip.background = element_blank(),
legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.ticks.y = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.line.x = element_blank(),
axis.line.y = element_blank()
) +
scale_x_continuous(breaks = seq(0, 100, by=10)) +
scale_y_continuous(labels = scales::percent, trans='log2', breaks = c(0.0001, 0.001, 0.01, 0.1, 1)) +
scale_linetype_manual(values = line_types) +
labs(title = NULL, y = NULL, x = NULL)
ggplot(data=mortality, aes(color=Year, x=Age, y=Rate)) +
geom_line(aes(color=Year),size=1,alpha=1) +
# Limit to 95 because ages above 100 are noisy and go above 100%
coord_cartesian(xlim=c(0,95)) +
theme_classic() +
scale_x_continuous(breaks = seq(0, 100, by=10)) +
scale_y_continuous(labels = scales::percent, trans='log2', breaks = c(0.0001, 0.001, 0.01, 0.1, 1)) +
labs(title = "Annual death rate by age",
subtitle = "Period death rate, as a percentage",  # If cohort data, change this to cohort death rate
y = "",
x = "Age",
color = "Decade",  # If cohort data, change this to "Birth cohort"
caption = "Source: Max Planck Institute for Demographic Research (Germany), University of California, Berkeley (USA), and French Institute for Demographic Studies (France).\n(data downloaded on [12 Sep 2023])\nChart by Saloni Dattani\nAvailable at: code.scientificdiscovery.dev")
ggplot(data=mortality, aes(color=Year, x=Age, y=Rate)) +
geom_line(aes(color=Year),size=0.11,alpha=1) +
# Limit to 95 because ages above 100 are noisy and go above 100%
coord_cartesian(xlim=c(0,95)) +
theme_classic() +
scale_x_continuous(breaks = seq(0, 100, by=10)) +
scale_color_brewer(palette = "RdBu") # Use red/blue palette
scale_y_continuous(labels = scales::percent, trans='log2', breaks = c(0.0001, 0.001, 0.01, 0.1, 1)) +
labs(title = "Annual death rate by age",
subtitle = "Period death rate, as a percentage",  # If cohort data, change this to cohort death rate
y = "",
x = "Age",
color = "Decade",  # If cohort data, change this to "Birth cohort"
caption = "Source: Max Planck Institute for Demographic Research (Germany), University of California, Berkeley (USA), and French Institute for Demographic Studies (France).\n(data downloaded on [12 Sep 2023])\nChart by Saloni Dattani\nAvailable at: code.scientificdiscovery.dev")
ggplot(data=mortality, aes(color=Year, x=Age, y=Rate)) +
geom_line(aes(color=Year),size=0.11,alpha=1) +
# Limit to 95 because ages above 100 are noisy and go above 100%
coord_cartesian(xlim=c(0,95)) +
theme_classic() +
scale_x_continuous(breaks = seq(0, 100, by=10)) +
scale_y_continuous(labels = scales::percent, trans='log2', breaks = c(0.0001, 0.001, 0.01, 0.1, 1)) +
scale_color_brewer(palette = "RdBu") # Use red/blue palette
labs(title = "Annual death rate by age",
subtitle = "Period death rate, as a percentage",  # If cohort data, change this to cohort death rate
y = "",
x = "Age",
color = "Decade",  # If cohort data, change this to "Birth cohort"
caption = "Source: Max Planck Institute for Demographic Research (Germany), University of California, Berkeley (USA), and French Institute for Demographic Studies (France).\n(data downloaded on [12 Sep 2023])\nChart by Saloni Dattani\nAvailable at: code.scientificdiscovery.dev")
ggplot(data=mortality, aes(color=Year, x=Age, y=Rate)) +
geom_line(aes(color=Year),size=0.11,alpha=1) +
# Limit to 95 because ages above 100 are noisy and go above 100%
coord_cartesian(xlim=c(0,95)) +
theme_classic() +
scale_x_continuous(breaks = seq(0, 100, by=10)) +
scale_y_continuous(labels = scales::percent, trans='log2', breaks = c(0.0001, 0.001, 0.01, 0.1, 1)) +
scale_color_brewer(palette = "RdYlBu") # Use red/blue palette
labs(title = "Annual death rate by age",
subtitle = "Period death rate, as a percentage",  # If cohort data, change this to cohort death rate
y = "",
x = "Age",
color = "Decade",  # If cohort data, change this to "Birth cohort"
caption = "Source: Max Planck Institute for Demographic Research (Germany), University of California, Berkeley (USA), and French Institute for Demographic Studies (France).\n(data downloaded on [12 Sep 2023])\nChart by Saloni Dattani\nAvailable at: code.scientificdiscovery.dev")
ggplot(data=mortality, aes(color=Year, x=Age, y=Rate)) +
geom_line(aes(color=Year),size=0.5,alpha=1) +
# Limit to 95 because ages above 100 are noisy and go above 100%
coord_cartesian(xlim=c(0,95)) +
theme_classic() +
scale_x_continuous(breaks = seq(0, 100, by=10)) +
scale_y_continuous(labels = scales::percent, trans='log2', breaks = c(0.0001, 0.001, 0.01, 0.1, 1)) +
scale_color_brewer(palette = "RdYlBu") # Use red/blue palette
labs(title = "Annual death rate by age",
subtitle = "Period death rate, as a percentage",  # If cohort data, change this to cohort death rate
y = "",
x = "Age",
color = "Decade",  # If cohort data, change this to "Birth cohort"
caption = "Source: Max Planck Institute for Demographic Research (Germany), University of California, Berkeley (USA), and French Institute for Demographic Studies (France).\n(data downloaded on [12 Sep 2023])\nChart by Saloni Dattani\nAvailable at: code.scientificdiscovery.dev")
ggplot(data=mortality, aes(color=Year, x=Age, y=Rate)) +
geom_line(aes(color=Year),size=0.5,alpha=1) +
# Limit to 95 because ages above 100 are noisy and go above 100%
coord_cartesian(xlim=c(0,95)) +
theme_classic() +
scale_x_continuous(breaks = seq(0, 100, by=10)) +
scale_y_continuous(labels = scales::percent, trans='log2', breaks = c(0.0001, 0.001, 0.01, 0.1, 1)) +
scale_color_brewer(palette = "RdYlBu") + # Use red/blue palette
labs(title = "Annual death rate by age",
subtitle = "Period death rate, as a percentage",  # If cohort data, change this to cohort death rate
y = "",
x = "Age",
color = "Decade",  # If cohort data, change this to "Birth cohort"
caption = "Source: Max Planck Institute for Demographic Research (Germany), University of California, Berkeley (USA), and French Institute for Demographic Studies (France).\n(data downloaded on [12 Sep 2023])\nChart by Saloni Dattani\nAvailable at: code.scientificdiscovery.dev")
ggplot(data=mortality, aes(color=Year, x=Age, y=Rate)) +
geom_smooth(aes(color=Year),size=0.5,alpha=1) +
# Limit to 95 because ages above 100 are noisy and go above 100%
coord_cartesian(xlim=c(0,95)) +
theme_classic() +
scale_x_continuous(breaks = seq(0, 100, by=10)) +
scale_y_continuous(labels = scales::percent, trans='log2', breaks = c(0.0001, 0.001, 0.01, 0.1, 1)) +
scale_color_brewer(palette = "RdYlBu") + # Use red/blue palette
labs(title = "Annual death rate by age",
subtitle = "Period death rate, as a percentage",  # If cohort data, change this to cohort death rate
y = "",
x = "Age",
color = "Decade",  # If cohort data, change this to "Birth cohort"
caption = "Source: Max Planck Institute for Demographic Research (Germany), University of California, Berkeley (USA), and French Institute for Demographic Studies (France).\n(data downloaded on [12 Sep 2023])\nChart by Saloni Dattani\nAvailable at: code.scientificdiscovery.dev")
ggplot(data=mortality, aes(color=Year, x=Age, y=Rate)) +
geom_smooth(aes(color=Year), method="gam", formula = y ~ s(x, bs = "cs"), size=0.5, alpha=1, se=FALSE) +
# Limit to 95 because ages above 100 are noisy and go above 100%
coord_cartesian(xlim=c(0,95)) +
theme_classic() +
scale_x_continuous(breaks = seq(0, 100, by=10)) +
scale_y_continuous(labels = scales::percent, trans='log2', breaks = c(0.0001, 0.001, 0.01, 0.1, 1)) +
scale_color_brewer(palette = "RdYlBu") + # Use red/blue palette
labs(title = "Annual death rate by age",
subtitle = "Period death rate, as a percentage",  # If cohort data, change this to cohort death rate
y = "",
x = "Age",
color = "Decade",  # If cohort data, change this to "Birth cohort"
caption = "Source: Max Planck Institute for Demographic Research (Germany), University of California, Berkeley (USA), and French Institute for Demographic Studies (France).\n(data downloaded on [12 Sep 2023])\nChart by Saloni Dattani\nAvailable at: code.scientificdiscovery.dev")
ggplot(data=mortality, aes(color=Year, x=Age, y=Rate)) +
geom_line(color=Year) +
# Limit to 95 because ages above 100 are noisy and go above 100%
coord_cartesian(xlim=c(0,95)) +
theme_classic() +
scale_x_continuous(breaks = seq(0, 100, by=10)) +
scale_y_continuous(labels = scales::percent, trans='log2', breaks = c(0.0001, 0.001, 0.01, 0.1, 1)) +
scale_color_brewer(palette = "RdYlBu") + # Use red/blue palette
labs(title = "Annual death rate by age",
subtitle = "Period death rate, as a percentage",  # If cohort data, change this to cohort death rate
y = "",
x = "Age",
color = "Decade",  # If cohort data, change this to "Birth cohort"
caption = "Source: Max Planck Institute for Demographic Research (Germany), University of California, Berkeley (USA), and French Institute for Demographic Studies (France).\n(data downloaded on [12 Sep 2023])\nChart by Saloni Dattani\nAvailable at: code.scientificdiscovery.dev")
ggplot(data=mortality, aes(color=Year, x=Age, y=Rate)) +
geom_smooth(aes(color=Year),size=0.5,alpha=1) +
# Limit to 95 because ages above 100 are noisy and go above 100%
coord_cartesian(xlim=c(0,95)) +
theme_classic() +
scale_x_continuous(breaks = seq(0, 100, by=10)) +
scale_y_continuous(labels = scales::percent, trans='log2', breaks = c(0.0001, 0.001, 0.01, 0.1, 1)) +
scale_color_brewer(palette = "RdYlBu") + # Use red/blue palette
labs(title = "Annual death rate by age",
subtitle = "Period death rate, as a percentage",  # If cohort data, change this to cohort death rate
y = "",
x = "Age",
color = "Decade",  # If cohort data, change this to "Birth cohort"
caption = "Source: Max Planck Institute for Demographic Research (Germany), University of California, Berkeley (USA), and French Institute for Demographic Studies (France).\n(data downloaded on [12 Sep 2023])\nChart by Saloni Dattani\nAvailable at: code.scientificdiscovery.dev")
ggplot(data=mortality, aes(color=Year, x=Age, y=Rate)) +
geom_line(aes(color=Year),size=0.5,alpha=1) +
# Limit to 95 because ages above 100 are noisy and go above 100%
coord_cartesian(xlim=c(0,95)) +
theme_classic() +
scale_x_continuous(breaks = seq(0, 100, by=10)) +
scale_y_continuous(labels = scales::percent, trans='log2', breaks = c(0.0001, 0.001, 0.01, 0.1, 1)) +
scale_color_brewer(palette = "RdYlBu") + # Use red/blue palette
labs(title = "Annual death rate by age",
subtitle = "Period death rate, as a percentage",  # If cohort data, change this to cohort death rate
y = "",
x = "Age",
color = "Decade",  # If cohort data, change this to "Birth cohort"
caption = "Source: Max Planck Institute for Demographic Research (Germany), University of California, Berkeley (USA), and French Institute for Demographic Studies (France).\n(data downloaded on [12 Sep 2023])\nChart by Saloni Dattani\nAvailable at: code.scientificdiscovery.dev")
mortality <- mortality %>%
filter(Rate > 0)
ggplot(data=mortality, aes(color=Year, x=Age, y=Rate)) +
geom_line(aes(color=Year),size=0.5,alpha=1) +
# Limit to 95 because ages above 100 are noisy and go above 100%
coord_cartesian(xlim=c(0,95)) +
theme_classic() +
scale_x_continuous(breaks = seq(0, 100, by=10)) +
scale_y_continuous(labels = scales::percent, trans='log2', breaks = c(0.0001, 0.001, 0.01, 0.1, 1)) +
scale_color_brewer(palette = "RdYlBu") + # Use red/blue palette
labs(title = "Annual death rate by age",
subtitle = "Period death rate, as a percentage",  # If cohort data, change this to cohort death rate
y = "",
x = "Age",
color = "Decade",  # If cohort data, change this to "Birth cohort"
caption = "Source: Max Planck Institute for Demographic Research (Germany), University of California, Berkeley (USA), and French Institute for Demographic Studies (France).\n(data downloaded on [12 Sep 2023])\nChart by Saloni Dattani\nAvailable at: code.scientificdiscovery.dev")
mortality <- mortality %>%
filter(Rate > 0) %>%
filter(Sex == 'Total')
ggplot(data=mortality, aes(color=Year, x=Age, y=Rate)) +
geom_line(aes(color=Year),size=0.5,alpha=1) +
# Limit to 95 because ages above 100 are noisy and go above 100%
coord_cartesian(xlim=c(0,95)) +
theme_classic() +
scale_x_continuous(breaks = seq(0, 100, by=10)) +
scale_y_continuous(labels = scales::percent, trans='log2', breaks = c(0.0001, 0.001, 0.01, 0.1, 1)) +
scale_color_brewer(palette = "RdYlBu") + # Use red/blue palette
labs(title = "Annual death rate by age",
subtitle = "Period death rate, as a percentage",  # If cohort data, change this to cohort death rate
y = "",
x = "Age",
color = "Decade",  # If cohort data, change this to "Birth cohort"
caption = "Source: Max Planck Institute for Demographic Research (Germany), University of California, Berkeley (USA), and French Institute for Demographic Studies (France).\n(data downloaded on [12 Sep 2023])\nChart by Saloni Dattani\nAvailable at: code.scientificdiscovery.dev")
ggplot(data=mortality, aes(color=Year, x=Age, y=Rate)) +
geom_line(aes(color=Year),size=0.5,alpha=1) +
# Limit to 95 because ages above 100 are noisy and go above 100%
coord_cartesian(xlim=c(0,95)) +
theme_classic() +
scale_x_continuous(breaks = seq(0, 100, by=10)) +
scale_y_continuous(labels = scales::percent, trans='log2', breaks = c(0.0001, 0.001, 0.01, 0.1, 1)) +
scale_color_brewer(palette = "RdYlBu") + # Use red/blue palette
labs(title = "Annual death rate by age",
y = "",
x = "Age",
color = "Decade",  # If cohort data, change this to "Birth cohort"
caption = "Source: Max Planck Institute for Demographic Research (Germany), University of California, Berkeley (USA), and French Institute for Demographic Studies (France).\n(data downloaded on [12 Sep 2023])\nChart by Saloni Dattani\nAvailable at: code.scientificdiscovery.dev")
ggplot(data=mortality, aes(color=Year, x=Age, y=Rate)) +
geom_line(aes(color=Year),size=0.5,alpha=1) +
# Limit to 95 because ages above 100 are noisy and go above 100%
coord_cartesian(xlim=c(0,95)) +
theme_classic() +
scale_x_continuous(breaks = seq(0, 100, by=10)) +
scale_y_continuous(labels = scales::percent, trans='log2', breaks = c(0.0001, 0.001, 0.01, 0.1, 1)) +
scale_color_brewer(palette = "RdYlBu") + # Use red/blue palette
labs(title = "Annual death rate by age, United Kingdom",
y = "",
x = "Age",
color = "Decade",  # If cohort data, change this to "Birth cohort"
caption = "Source: Max Planck Institute for Demographic Research (Germany), University of California, Berkeley (USA), and French Institute for Demographic Studies (France).\n(data downloaded on [12 Sep 2023])\nChart by Saloni Dattani\nAvailable at: code.scientificdiscovery.dev")
